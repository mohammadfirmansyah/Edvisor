# .github/workflows/update-release-badge.yml

name: Update Release Badges

on:
  release:
    types: [published]

permissions:
  contents: write  # Memberikan izin tulis pada konten repository

jobs:
  update-badges:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Mengambil seluruh history untuk push

      # 2. Setup Environment
      - name: Setup Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y jq locales
          sudo locale-gen id_ID.UTF-8

      # 3. Extract Release Information
      - name: Extract Release Information
        id: extract_release
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_OUTPUT

          # Ekstrak tanggal publikasi dari event JSON
          PUBLISHED_AT=$(jq -r .release.published_at "$GITHUB_EVENT_PATH")
          echo "PUBLISHED_AT=${PUBLISHED_AT}" >> $GITHUB_OUTPUT

      # 4. Format Release Date to Indonesian
      - name: Format Release Date
        id: format_date
        run: |
          PUBLISHED_AT=${{ steps.extract_release.outputs.PUBLISHED_AT }}
          FORMATTED_DATE=$(date -d "$PUBLISHED_AT" +"%d %B %Y" --locale=id_ID.UTF-8)
          echo "FORMATTED_DATE=${FORMATTED_DATE}" >> $GITHUB_OUTPUT

      # 5. Determine Status and Color
      - name: Determine Status and Color
        id: determine_status
        run: |
          TAG_NAME=${{ steps.extract_release.outputs.TAG_NAME }}

          # Default values
          STATUS="STABLE"
          COLOR="success"

          # Regex untuk mengekstrak label dari tag rilis
          if [[ "$TAG_NAME" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            STATUS="STABLE"
            COLOR="success"
          elif [[ "$TAG_NAME" =~ ^[0-9]+\.[0-9]+\.[0-9]+-([A-Za-z]+)\.[0-9]+$ ]]; then
            LABEL=${BASH_REMATCH[1]}
            STATUS=$(echo "$LABEL" | tr '[:lower:]' '[:upper:]')
            case "$STATUS" in
              ALPHA)
                COLOR="critical"  # Merah
                ;;
              BETA)
                COLOR="important"  # Oranye
                ;;
              *)
                COLOR="success"    # Hijau
                ;;
            esac
          fi

          echo "STATUS=${STATUS}" >> $GITHUB_OUTPUT
          echo "COLOR=${COLOR}" >> $GITHUB_OUTPUT

      # 6a. Debug Before Replacement
      - name: Debug Before Replacement
        run: |
          echo "===== README.md Sebelum Penggantian ====="
          cat README.md

      # 6b. Replace Placeholders in README.md
      - name: Replace Placeholders in README.md
        run: |
          STATUS=${{ steps.determine_status.outputs.STATUS }}
          COLOR=${{ steps.determine_status.outputs.COLOR }}
          FORMATTED_DATE=${{ steps.format_date.outputs.FORMATTED_DATE }}

          # Encode URL Badge
          ENCODED_STATUS=$(printf '%s' "$STATUS" | jq -sRr @uri)
          ENCODED_FORMATTED_DATE=$(printf '%s' "$FORMATTED_DATE" | jq -sRr @uri)

          # Buat URL badge
          LATEST_STATUS_BADGE_URL="https://img.shields.io/badge/LATEST%20STATUS-${ENCODED_STATUS}-${COLOR}?style=for-the-badge"
          LATEST_UPDATE_BADGE_URL="https://img.shields.io/badge/Latest%20Update-${ENCODED_FORMATTED_DATE}-lightgrey?style=for-the-badge"

          # Debugging: Tampilkan URL yang akan dimasukkan
          echo "Latest Status Badge URL: $LATEST_STATUS_BADGE_URL"
          echo "Latest Update Badge URL: $LATEST_UPDATE_BADGE_URL"

          # Gunakan perl untuk mengganti placeholder
          perl -i -pe 's|{{LATEST_STATUS_BADGE}}|$ENV{LATEST_STATUS_BADGE_URL}|g' README.md
          perl -i -pe 's|{{LATEST_UPDATE_BADGE}}|$ENV{LATEST_UPDATE_BADGE_URL}|g' README.md

      # 6c. Debug After Replacement
      - name: Debug After Replacement
        run: |
          echo "===== README.md Setelah Penggantian ====="
          cat README.md

      # 7. Commit and Push Changes
      - name: Commit and Push Changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add README.md

          # Buat pesan commit
          COMMIT_MESSAGE="Update badges: Release=${{ steps.extract_release.outputs.TAG_NAME }}, Date=${{ steps.format_date.outputs.FORMATTED_DATE }}, Status=${{ steps.determine_status.outputs.STATUS }}"

          # Commit dan push jika ada perubahan
          git commit -m "$COMMIT_MESSAGE" || echo "No changes to commit."
          git push